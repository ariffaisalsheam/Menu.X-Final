spring:
  application:
    name: menu-x-backend
  profiles:
    active: supabase

---
# Development Profile (H2 Database)
spring:
  config:
    activate:
      on-profile: dev
  datasource:
    url: jdbc:h2:mem:testdb
    username: sa
    password:
    driver-class-name: org.h2.Driver
  h2:
    console:
      enabled: true
  jpa:
    hibernate:
      ddl-auto: create-drop
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.H2Dialect
        format_sql: true
  security:
    cors:
      allowed-origins: "http://localhost:5173"
      allowed-methods: "*"
      allowed-headers: "*"
      allow-credentials: true

jwt:
  secret: mySecretKey123456789012345678901234567890
  expiration: 86400000 # 24 hours in milliseconds

gemini:
  api:
    key: AIzaSyAuWkC4FLccs0EZs0prOufuBk2ojWaCb2E
    url: https://generativelanguage.googleapis.com/v1beta/models/gemini-pro:generateContent

server:
  port: 9090

logging:
  level:
    com.menux: DEBUG
    org.springframework.security: DEBUG

---
# Supabase Profile (PostgreSQL)
spring:
  config:
    activate:
      on-profile: supabase
  datasource:
    url: jdbc:postgresql://aws-0-ap-southeast-1.pooler.supabase.com:6543/postgres
    username: postgres.fxxbzrxcakzbbdvxocsu
    password: 007$he@M
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
  security:
    cors:
      allowed-origins: "http://localhost:5173"
      allowed-methods: "*"
      allowed-headers: "*"
      allow-credentials: true

# Add these missing sections
jwt:
  secret: mySecretKey123456789012345678901234567890
  expiration: 86400000

gemini:
  api:
    key: AIzaSyAuWkC4FLccs0EZs0prOufuBk2ojWaCb2E
    url: https://generativelanguage.googleapis.com/v1beta/models/gemini-pro:generateContent

---
# Production Profile
spring:
  config:
    activate:
      on-profile: prod
  datasource:
    url: ${DATABASE_URL}
    username: ${DATABASE_USERNAME}
    password: ${DATABASE_PASSWORD}
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect

jwt:
  secret: ${JWT_SECRET}
  expiration: ${JWT_EXPIRATION:86400000}

gemini:
  api:
    key: ${GEMINI_API_KEY}
    url: https://generativelanguage.googleapis.com/v1beta/models/gemini-pro:generateContent

server:
  port: ${PORT:8080}

logging:
  level:
    com.menux: INFO
    org.springframework.security: WARN